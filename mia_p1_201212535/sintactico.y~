%{
#include "scanner.h"//se importa el header del analisis sintactico
#include <QString>
#include <string>
//#include "qdebug.h"
#include <iostream>
//#include "obmkdisk.h"
using namespace std;
extern int yylineno; //linea actual donde se encuentra el parser (analisis lexico) lo maneja BISON
extern int columna; //columna actual donde se encuentra el parser (analisis lexico) lo maneja BISON
extern char *yytext; //lexema actual donde esta el parser (analisis lexico) lo maneja BISON

int yyerror(const char* mens)
{
std::cout << mens <<" "<<yytext<< std::endl;
return 0;
}
%}
//error-verbose si se especifica la opcion los errores sintacticos son especificados por BISON
%defines "parser.h"
%output "parser.cpp"
%error-verbose
%locations
%union{
//se especifican los tipo de valores para los no terminales y lo terminales
//char TEXT [256];
//QString TEXT;
char TEXT[256];
//class obmkdisk *mdisk;

}
//TERMINALES DE TIPO TEXT, SON STRINGS

%token<TEXT> tk_mkdisk;
%token<TEXT> tk_menos;

/*%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>
%token<TEXT>*/





//%type<mdisk> COMANDOMKDISK; // lista de instrucciones

%left suma menos
%left multi division
%left potencia
%start INICIO
%%

INICIO : LEXPA { }
;
LEXPA:  tk_mkdisk COMANDOMKDISK{/*$2->mostrardatos($2);//ejecuto el metodo "mostrardatos" del objeto retornado en COMANDOMKDISKprintf("estoy en lexpa primera produccion")*/;}

;

COMANDOMKDISK:
tk_menos tk_mkdisk {}
;